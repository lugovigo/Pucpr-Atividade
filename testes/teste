from src.Main import *
from unittest.mock import patch
from fastapi.testclient import TestClient

client = TestClient(app)

def test_root():
    result = root()
    yield result
    assert result == {"message": "Hello World"}

def test_functeste02():
    with patch('random.randint', return_value=666):
        result = functeste02()
        yield result
        assert result == {"teste": True, "num_aleatorio": 666}

def test_criar_usuario():
    response = client.post("/usuarios", json={"id": 1, "nome": "Alice", "email": "alice@email.com"})
    result = criar_usuario(response)
    yield result
    assert response == result
                           
def test_obter_usuario():
    client.post("/usuarios", json={"id": 2, "nome": "Bob", "email": "bob@email.com"})
    response = client.get("/usuarios/2")
    result = obter_usuario(response)
    yield result
    assert response == result

def test_atualizar_usuario():
    client.post("/usuarios", json={"id": 3, "nome": "Carol", "email": "carol@email.com"})
    response = client.put("/usuarios/3", json={"id": 3, "nome": "Carol Updated", "email": "new@email.com"})
    result = atualizar_usuario(response)
    yield result
    assert response == result

def test_deletar_usuario():
    client.post("/usuarios", json={"id": 4, "nome": "Dan", "email": "dan@email.com"})
    response = client.delete("/usuarios/4")
<<<<<<< Updated upstream:testes/teste
    assert response.status_code == 200
    assert response.json() == {"message": "UsuÃ¡rio deletado"}
=======
    result = deletar_usuario(response)
    yield result
    assert response == result

def test_deletar_usuario_inexistente():
    response = client.delete("/usuarios/999")
    result = deletar_usuario(response)
    yield result
    assert not result 
>>>>>>> Stashed changes:tests/test_teste
